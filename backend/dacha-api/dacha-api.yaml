openapi: 3.0.1
info:
  title: Cache (Dache) API
  description: This is used by the Edge servers to access features and environments quickly.
  version: "1.1.1"
paths:
  /environment/{eId}/{serviceAccountKey}:
    parameters:
      - name: eId
        description: "id of environment"
        in: path
        schema:
          type: string
      - name: serviceAccountKey
        description: "serviceAccountKey of service account"
        in: path
        schema:
          type: string
    get:
      responses:
        200:
          description: "All feature values for this environment"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/FeatureValueCacheItem"
        404:
          description: "No such environment/account combo has read access"
  /environment/{eId}/{serviceAccountKey}/permissions:
    parameters:
      - name: eId
        description: "id of environment"
        in: path
        schema:
          type: string
      - name: serviceAccountKey
        description: "id of service account"
        in: path
        schema:
          type: string
    get:
      responses:
        200:
          description: "All permissions and feature values for this environment"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DachaPermissionResponse"
        404:
          description: "No such environment/account combo has read access"
  /environment/{eId}/structure:
    parameters:
      - name: eId
        description: "id of environment"
        in: path
        schema:
          type: string
    get:
      responses:
        200:
          description: "The parent structure for this environment"
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/DachaStructureResponse"
        404:
          description: "No such environment/account combo has read access"
components:
  schemas:
    CacheManagementMessage:
      required:
        - id
        - mit
        - requestType
        - cacheState
      properties:
        id:
          type: string
          format: uuid
        destId:
          description: "this allows one instance on the bus to communicate directly with another instance"
          type: string
          format: uuid
        requestType:
          $ref: "#/components/schemas/CacheRequestType"
        mit:
          description: "used only to negotiate master who is attempting to get data from MR"
          type: integer
          format: int64
        cacheState:
          $ref: "#/components/schemas/CacheState"
    CacheRequestType:
      type: string
      enum:
        - SEEKING_COMPLETE_CACHE
        - SEEKING_REFRESH
        - CLAIMING_MASTER
        - CACHE_REMOVED
        - CACHE_SOURCE
        - DUPLICATE_MIT
    CacheState:
      type: string
      enum:
        - NONE
        - REQUESTED
        - COMPLETE
    PublishAction:
      type: string
      description: "Indicates what type of update this is. If CREATE, it is a new record, if UPDATE it updates an existing one,
          if DELETE you should delete the record. If EMPTY then it indicates there are no records of this type and you shouldn't
          expect to see any further. EMPTY is used to indicate that the Master process is complete."
      enum:
        - CREATE
        - UPDATE
        - DELETE
        - EMPTY
    DachaStructureResponse:
      type: object
      required:
        - organizationId
        - portfolioId
        - applicationId
      properties:
        organizationId:
          x-basename: oId
          type: string
          format: uuid
        portfolioId:
          x-basename: pId
          type: string
          format: uuid
        applicationId:
          x-basename: aId
          type: string
          format: uuid
    EnvironmentCacheItem:
      properties:
        environment:
          $ref: "#/components/schemas/Environment"
        organizationId:
          x-basename: oId
          type: string
          format: uuid
        portfolioId:
          x-basename: pId
          type: string
          format: uuid
        applicationId:
          x-basename: aId
          type: string
          format: uuid
        featureValues:
          x-basename: fv
          type: array
          items:
            $ref: "#/components/schemas/FeatureValue"
        serviceAccounts:
          x-basename: sa
          type: array
          items:
            $ref: "#/components/schemas/ServiceAccount"
        action:
          $ref: "#/components/schemas/PublishAction"
        count:
          x-basename: c
          type: integer
    ServiceAccountCacheItem:
      properties:
        serviceAccount:
          $ref: "#/components/schemas/ServiceAccount"
        action:
          $ref: "#/components/schemas/PublishAction"
        count:
          type: integer
    # we will version based in different listening names
    EdgeInitRequest:
      required:
        - environmentId
        - serviceAccountId
      properties:
        environmentId:
          type: string
          format: uuid
        apiKey:
          type: string
        featureKey:
          description: "The key of the feature that a permission response will be looking for"
          type: string
        command:
          $ref: "#/components/schemas/EdgeInitRequestCommand"
    EdgeInitRequestCommand:
      type: string
      enum:
        - listen
        - permission
    EdgeInitPermissionResponse:
      type: object
      properties:
        success:
          type: boolean
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleType"
        feature:
          $ref: "#/components/schemas/FeatureValueCacheItem"
    DachaPermissionResponse:
      type: object
      required:
        - roles
        - feature
      properties:
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleType"
        feature:
          $ref: "#/components/schemas/DachaFeatureValueItem"
    EdgeInitResponse:
      required:
        - environmentId
        - serviceAccountId
        - success
        - features
      properties:
        environmentId:
          type: string
          format: uuid
        apiKey:
          type: string
        success:
          type: boolean
        features:
          type: array
          items:
            $ref: "#/components/schemas/FeatureValueCacheItem"
    DachaFeatureValueItem:
      required:
        - feature
        - value
        - action
      properties:
        feature:
          $ref: "#/components/schemas/Feature"
        value:
          $ref: "#/components/schemas/FeatureValue"
        strategies:
          type: array
          description: "A copy of the strategies that apply to this feature at this time."
          items:
            $ref: "#/components/schemas/RolloutStrategy"
    FeatureValueCacheItem:
      required:
        - feature
        - value
        - environmentId
        - action
      properties:
        environmentId:
          description: "this needs to be passed because the feature value may be null"
          type: string
          format: uuid
        feature:
          $ref: "#/components/schemas/Feature"
        value:
          $ref: "#/components/schemas/FeatureValue"
        action:
          $ref: "#/components/schemas/PublishAction"
        strategies:
          type: array
          description: "A copy of the strategies that apply to this feature at this time."
          items:
            $ref: "#/components/schemas/RolloutStrategy"
